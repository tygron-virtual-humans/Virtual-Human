% Please do note that we are working with another group. Many percepts are made but not used, so 
% everything we have here is just a 'guess', since it might be to difficult to implement it by the other group.

#import "HousingMain.mod2g".
#import "HousingEvent.mod2g".
#import "CompanyMain.mod2g".
#import "CompanyEvent.mod2g".
#import "StandardEvents.mod2g".

init module {
	knowledge {
		
		% Since there is no other way to implement this yet, the stakeholder that the agent is playing
		% needs to be hardcoded. Please comment the stakeholders that are not used.
		%stakeHolderHousing.
		 stakeHolderCompany.
		% stakeHolderMunicipality.
	}
	
	beliefs {
		%Belief that the stakeholder has no land
		selfStakeholderID(2).
		land(0).
	}
	
	program {
		%Initialize itself with an ID.
		if bel( percept(selfStakeholderID(ID))) then insert( selfStakeholderID(ID)).
		
		%Initialize the other stakeholders.
		forall bel (percept(stakeholder(ID, Type, Name))) do insert( stakeholder(ID, Name, Name)).
		
		% Initialize the indicators for this stakeholder with its importance.
		forall bel (percept( initIndicator(StakeholderID, IndicatorID, Weight)), selfStakeholderID(StakeholderID)) do insert( initIndicator(StakeholderID, IndicatorID, Weight)).

		%Initialize the targets with their current value and progress.
		forall bel(percept(indicator(ID, Type, Name, Target, Current, Progress))) do insert(indicator(ID, Type, Name, Target, Current, Progress)).
		
		%Initialize the buget of the stakeholder.
		if bel( percept(indicator(IndiID, Type, _, _, Current, _)), Type == 'finance', selfStakeholderID(ID), initIndicator(ID, IndiID, _)) then insert( budget(Current)).
		%if bel(percept(indicator(ID, Type, ID, _, Current, _)), Type == 'finance', selfStakeholderID(ID)) then insert( budget(Current)).
		
		%Initialize all economies.		
		forall bel(percept(economy(ID, Name, Type))) do insert(economy(ID, Name, Type)).
	}
		
	actionspec{
		
		%Action for buying land.
		buyLand(Surface, Cost) {
			pre { true }
			post{ true }
		}
		
		%Action for building.
		build(Surface, Type) {
			pre { true }
			post{ true }
		}
		
	}
}

main module {
	program {
		% If the stakeholder is the housing coorporation, call HousingMain. This contains a main module for the housing.
		%if bel ( stakeHolderHousing ) then HousingMain.
		
		% If the stakeholder is the company, call CompanyMain. This contains a main module for the company.
		if bel ( stakeHolderCompany ) then CompanyMain.
		
		if bel( goal(buyLand(Budget)), ) then buyLand
	}
}

event module {
	program {
		% Always call the StandardEvents module, which contains events handling every stakeholder has (like budget changes).
		if bel ( not(targetReached) ) then StandardEvents.
		
		% If the stakeholder is the Housing coorporation, call the HousingEvent, which contains all the events specific for the housing stakeholder.
%		if bel ( stakeHolderHousing ) then HousingEvent.
		
		% If the stakeholder is the company, call the CompanyEvent, which contains all the events specific for the company stakeholder.
%		if bel ( stakeHolderCompany ) then CompanyEvent.
	}
}
